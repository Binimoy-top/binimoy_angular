{"version":3,"file":"src_app_admin_lead_lead_module_ts.js","mappings":"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","sources":["./src/app/admin/lead/all-leads/all-leads.component.ts","./src/app/admin/lead/all-leads/all-leads.component.html","./src/app/admin/lead/all-leads/dialogs/delete/delete.component.ts","./src/app/admin/lead/all-leads/dialogs/delete/delete.component.html","./src/app/admin/lead/all-leads/dialogs/form-dialog/form-dialog.component.ts","./src/app/admin/lead/all-leads/dialogs/form-dialog/form-dialog.component.html","./src/app/admin/lead/all-leads/leads.model.ts","./src/app/admin/lead/all-leads/leads.service.ts","./src/app/admin/lead/dialogs/dialogs.component.ts","./src/app/admin/lead/dialogs/dialogs.component.html","./src/app/admin/lead/lead-routing.module.ts","./src/app/admin/lead/lead.component.ts","./src/app/admin/lead/lead.component.html","./src/app/admin/lead/lead.module.ts","./src/app/admin/lead/opportunity/opportunity.component.ts","./src/app/admin/lead/opportunity/opportunity.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { LeadsService } from \"./leads.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { Leads } from \"./leads.model\";\nimport { DataSource } from \"@angular/cdk/collections\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { FormDialogComponent } from \"./dialogs/form-dialog/form-dialog.component\";\nimport { DeleteDialogComponent } from \"./dialogs/delete/delete.component\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\nimport { DialogsComponent } from \"../dialogs/dialogs.component\";\nimport { Router } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-all-leads',\n  templateUrl: './all-leads.component.html',\n  styleUrls: ['./all-leads.component.sass']\n})\nexport class AllLeadsComponent \nextends UnsubscribeOnDestroyAdapter\n   implements OnInit {\n\n    displayedColumns = [\n      \"name\",\n      \"title\",\n      \"company\",\n      \"phone\",\n      \"mobile\",\n      \"email\",\n      \"leadstatus\",\n      \"owner\",\n      \"actions\"\n    ];\n    exampleDatabase: LeadsService | null;\n    dataSource: ExampleDataSource | null;\n    selection = new SelectionModel<Leads>(true, []);\n    id: string;\n    students: Leads | null;\n    breadscrums = [\n      {\n        title: \"All leads\",\n        items: [\"Leads\"],\n        active: \"All leads\",\n      },\n    ];\n    constructor(\n      public httpClient: HttpClient,\n      public dialog: MatDialog,\n      public studentsService: LeadsService,\n      private snackBar: MatSnackBar,\n      private router:Router,\n    ) {\n      super();\n    }\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\n    @ViewChild(\"filter\", { static: true }) filter: ElementRef;\n    @ViewChild(MatMenuTrigger)\n    contextMenu: MatMenuTrigger;\n    contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  \n    ngOnInit() {\n      this.loadData();\n    }\n    refresh() {\n      this.loadData();\n    }\n    addNew() {\n      let tempDirection;\n      if (localStorage.getItem(\"isRtl\") === \"true\") {\n        tempDirection = \"rtl\";\n      } else {\n        tempDirection = \"ltr\";\n      }\n      const dialogRef = this.dialog.open(FormDialogComponent, {\n        data: {\n          students: this.students,\n          action: \"add\",\n        },\n        direction: tempDirection,\n      });\n      this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n        if (result === 1) {\n          // After dialog is closed we're doing frontend updates\n          // For add we're just pushing a new row inside DataServicex\n          this.exampleDatabase.dataChange.value.unshift(\n            this.studentsService.getDialogData()\n          );\n          this.refreshTable();\n          this.showNotification(\n            \"snackbar-success\",\n            \"Add Record Successfully...!!!\",\n            \"bottom\",\n            \"center\"\n          );\n        }\n      });\n    }\n    editCall(row) {\n      this.id = row.name;\n      let tempDirection;\n      if (localStorage.getItem(\"isRtl\") === \"true\") {\n        tempDirection = \"rtl\";\n      } else {\n        tempDirection = \"ltr\";\n      }\n      this.router.navigate(['extra-pages/profile']);\n\n      // const dialogRef = this.dialog.open(FormDialogComponent, {\n      //   data: {\n      //     students: row,\n      //     action: \"edit\",\n      //   },\n      //   direction: tempDirection,\n      // });\n      // this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      //   if (result === 1) {\n      //     // When using an edit things are little different, firstly we find record inside DataService by id\n      //     const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n      //       (x) => x.name === this.id\n      //     );\n      //     // Then you update that record using data from dialogData (values you enetered)\n      //     this.exampleDatabase.dataChange.value[foundIndex] =\n      //       this.studentsService.getDialogData();\n      //     // And lastly refresh table\n      //     this.refreshTable();\n      //     this.showNotification(\n      //       \"black\",\n      //       \"Edit Record Successfully...!!!\",\n      //       \"bottom\",\n      //       \"center\"\n      //     );\n      //   }\n      // });\n    }\n    deleteItem(row) {\n      this.id = row.id;\n      let tempDirection;\n      if (localStorage.getItem(\"isRtl\") === \"true\") {\n        tempDirection = \"rtl\";\n      } else {\n        tempDirection = \"ltr\";\n      }\n      const dialogRef = this.dialog.open(DeleteDialogComponent, {\n        data: row,\n        direction: tempDirection,\n      });\n\n      this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n        if (result === 1) {\n          const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n            (x) => x.name === this.id\n          );\n          // for delete we use splice in order to remove single object from DataService\n          this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n          this.refreshTable();\n          this.showNotification(\n            \"snackbar-danger\",\n            \"Delete Record Successfully...!!!\",\n            \"bottom\",\n            \"center\"\n          );\n        }\n      });\n    }\n    private refreshTable() {\n      this.paginator._changePageSize(this.paginator.pageSize);\n    }\n    /** Whether the number of selected elements matches the total number of rows. */\n    isAllSelected() {\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.renderedData.length;\n      return numSelected === numRows;\n    }\n  \n    /** Selects all rows if they are not all selected; otherwise clear selection. */\n    masterToggle() {\n      this.isAllSelected()\n        ? this.selection.clear()\n        : this.dataSource.renderedData.forEach((row) =>\n            this.selection.select(row)\n          );\n    }\n    removeSelectedRows() {\n      const totalSelect = this.selection.selected.length;\n      this.selection.selected.forEach((item) => {\n        const index: number = this.dataSource.renderedData.findIndex(\n          (d) => d === item\n        );\n        // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n        this.exampleDatabase.dataChange.value.splice(index, 1);\n        this.refreshTable();\n        this.selection = new SelectionModel<Leads>(true, []);\n      });\n      this.showNotification(\n        \"snackbar-danger\",\n        totalSelect + \" Record Delete Successfully...!!!\",\n        \"bottom\",\n        \"center\"\n      );\n    }\n    public loadData() {\n      this.exampleDatabase = new LeadsService(this.httpClient);\n      this.dataSource = new ExampleDataSource(\n        this.exampleDatabase,\n        this.paginator,\n        this.sort\n      );\n      this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\n        () => {\n          if (!this.dataSource) {\n            return;\n          }\n          this.dataSource.filter = this.filter.nativeElement.value;\n        }\n      );\n    }\n    showNotification(colorName, text, placementFrom, placementAlign) {\n      this.snackBar.open(text, \"\", {\n        duration: 2000,\n        verticalPosition: placementFrom,\n        horizontalPosition: placementAlign,\n        panelClass: colorName,\n      });\n    }\n    // context menu\n    onContextMenu(event: MouseEvent, item: Leads) {\n      event.preventDefault();\n      this.contextMenuPosition.x = event.clientX + \"px\";\n      this.contextMenuPosition.y = event.clientY + \"px\";\n      this.contextMenu.menuData = { item: item };\n      this.contextMenu.menu.focusFirstItem(\"mouse\");\n      this.contextMenu.openMenu();\n    }\n\n    addNewEvent(){\n      let dialogRef=this.dialog.open(DialogsComponent);\n      return dialogRef;\n      // dialogRef.afterClosed().subscribe(res=>{\n      //   console.log(`dialog result:${res}`)\n        \n      // })\n    }\n\n  }\n  export class ExampleDataSource extends DataSource<Leads> {\n    filterChange = new BehaviorSubject(\"\");\n    get filter(): string {\n      return this.filterChange.value;\n    }\n    set filter(filter: string) {\n      this.filterChange.next(filter);\n    }\n    filteredData: Leads[] = [];\n    renderedData: Leads[] = [];\n    constructor(\n      public exampleDatabase: LeadsService,\n      public paginator: MatPaginator,\n      public _sort: MatSort\n    ) {\n      super();\n      // Reset to the first page when the user changes the filter.\n      this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n    }\n    /** Connect function called by the table to retrieve one stream containing the data to render. */\n    connect(): Observable<Leads[]> {\n      // Listen for any changes in the base data, sorting, filtering, or pagination\n      const displayDataChanges = [\n        this.exampleDatabase.dataChange,\n        this._sort.sortChange,\n        this.filterChange,\n        this.paginator.page,\n      ];\n      this.exampleDatabase.getAllStudentss();\n      return merge(...displayDataChanges).pipe(\n        map(() => {\n          // Filter data\n          this.filteredData = this.exampleDatabase.data\n            .slice()\n            .filter((students: Leads) => {\n              const searchStr = (\n  \n                students.name +\n                students.email +\n                students.mobile\n              ).toLowerCase();\n              return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n            });\n          // Sort filtered data\n          const sortedData = this.sortData(this.filteredData.slice());\n          // Grab the page's slice of the filtered sorted data.\n          const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n          this.renderedData = sortedData.splice(\n            startIndex,\n            this.paginator.pageSize\n          );\n          return this.renderedData;\n        })\n      );\n    }\n    disconnect() {}\n    /** Returns a sorted copy of the database data. */\n    sortData(data: Leads[]): Leads[] {\n      if (!this._sort.active || this._sort.direction === \"\") {\n        return data;\n      }\n      return data.sort((a, b) => {\n        let propertyA: number | string = \"\";\n        let propertyB: number | string = \"\";\n        switch (this._sort.active) {\n  \n          case \"name\":\n            [propertyA, propertyB] = [a.name, b.name];\n            break;\n          case \"title\":\n            [propertyA, propertyB] = [a.title, b.title  ];\n            break;\n          case \"company\":\n            [propertyA, propertyB] = [a.company, b.company];\n            break;\n          case \"mobile\":\n            [propertyA, propertyB] = [a.mobile, b.mobile];\n            break;\n        }\n        const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n        const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n        return (\n          (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\n        );\n      });\n    }\n  }\n  ","<section class=\"content\">\n  <div class=\"content-block\">\n    <br />\n\n    <div class=\"row\">\n      <div class=\"col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-md-12 col-sm-12\">\n                <div class=\"panel-body\">\n                  <div class=\"m-b-25\">\n                    <div class=\"row\">\n                      <div class=\"col-sm-6\"><br />My Leads</div>\n                      <div class=\"col-sm-4\">\n                        <div class=\"materialTableHeader bg-transparent\">\n                          <ul class=\"header-buttons-left ml-0\">\n                            <li class=\"dropdown m-l-20\">\n                              <label for=\"search-input\"\n                                ><i class=\"material-icons search-icon\"\n                                  >search</i\n                                ></label\n                              >\n                              <input\n                                placeholder=\"Search\"\n                                type=\"text\"\n                                #filter\n                                class=\"browser-default search-field\"\n                                aria-label=\"Search box\"\n                              />\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                      <div class=\"col-sm-2\">\n                        <br />\n                        <button\n                          mat-raised-button\n                          color=\"primary\"\n                          (click)=\"addNewEvent()\"\n                        >\n                          Add Leads\n                        </button>\n                        <!-- <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div> -->\n                      </div>\n                    </div>\n                    <br />\n\n                    <div class=\"table-responsive\">  \n                      <mat-table\n                        #table\n                        [dataSource]=\"dataSource\"\n                        matSort\n                        class=\"mat-cell\"\n                      >\n                        <!-- ID Column -->\n                        <ng-container matColumnDef=\"name\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >Name\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\">{{\n                            row.name\n                          }}</mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"title\">\n                          <mat-header-cell\n                            mat-header-cell\n                            *matHeaderCellDef\n                            [ngClass]=\"'tbl-col-width-per-6'\"\n                          >\n                            title\n                          </mat-header-cell>\n                          <mat-cell mat-cell *matCellDef=\"let row\">\n                            {{ row.title }}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"company\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >cmp\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{ row.company }}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"phone\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >phone\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{ row.phone }}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"mobile\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >mobile\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{ row.mobile }}</mat-cell\n                          >\n                        </ng-container>\n                        <ng-container matColumnDef=\"email\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >email\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{ row.email }}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"leadstatus\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >leadstatus\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{ row.leadstatus }}\n                          </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"owner\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            >owner\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row\"\n                            (contextmenu)=\"onContextMenu($event, row)\"\n                          >\n                            {{ row.owner }}\n                          </mat-cell>\n                        </ng-container>\n\n                        <!-- actions -->\n                        <ng-container matColumnDef=\"actions\">\n                          <mat-header-cell class=\"pr-0\" *matHeaderCellDef\n                            >Actions\n                          </mat-header-cell>\n                          <mat-cell\n                            *matCellDef=\"let row; let i = index\"\n                            class=\"pr-0\"\n                          >\n                            <button\n                              mat-icon-button\n                              color=\"accent\"\n                              class=\"btn-tbl-edit\"\n                              (click)=\"$event.stopPropagation()\"\n                              (click)=\"editCall(row)\"\n                            >\n                              <mat-icon aria-label=\"Edit\" class=\"col-white\"\n                                >edit\n                              </mat-icon>\n                            </button>\n                            <button\n                              mat-icon-button\n                              color=\"accent\"\n                              class=\"btn-tbl-delete\"\n                              (click)=\"$event.stopPropagation()\"\n                              (click)=\"deleteItem(row)\"\n                            >\n                              <mat-icon aria-label=\"Delete\" class=\"col-white\"\n                                >delete\n                              </mat-icon>\n                            </button>\n                          </mat-cell>\n                        </ng-container>\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                        <mat-row\n                          *matRowDef=\"let row; columns: displayedColumns\"\n                          (click)=\"editCall(row)\"\n                          [style.cursor]=\"'pointer'\"\n                          matRipple\n                        >\n                        </mat-row>\n                      </mat-table>\n                      <!-- Loading spinner -->\n                      <div\n                        *ngIf=\"exampleDatabase.isTblLoading\"\n                        class=\"tbl-spinner\"\n                      >\n                        <mat-progress-spinner\n                          color=\"primary\"\n                          [diameter]=\"40\"\n                          mode=\"indeterminate\"\n                        >\n                        </mat-progress-spinner>\n                      </div>\n                      <!-- context menu start -->\n                      <div\n                        style=\"visibility: hidden; position: fixed\"\n                        [style.left]=\"contextMenuPosition.x\"\n                        [style.top]=\"contextMenuPosition.y\"\n                        [matMenuTriggerFor]=\"contextMenu\"\n                      ></div>\n                      <mat-menu #contextMenu=\"matMenu\">\n                        <ng-template matMenuContent let-item=\"item\">\n                          <button mat-menu-item (click)=\"addNew()\">\n                            <mat-icon>add_box</mat-icon>\n                            <span>Add Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"editCall(item)\">\n                            <mat-icon>create</mat-icon>\n                            <span>Edit Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"deleteItem(item)\">\n                            <mat-icon>delete</mat-icon>\n                            <span>Delete Record</span>\n                          </button>\n                          <button mat-menu-item (click)=\"refresh()\">\n                            <mat-icon>refresh</mat-icon>\n                            <span>Refresh Record</span>\n                          </button>\n                          <button mat-menu-item disabled>\n                            <mat-icon>no_encryption</mat-icon>\n                            <span>Disable</span>\n                          </button>\n                          <button\n                            mat-menu-item\n                            [matMenuTriggerFor]=\"nestedmenu\"\n                          >\n                            <mat-icon>list_alt</mat-icon>\n                            <span> Nested Menu</span>\n                          </button>\n                        </ng-template>\n                      </mat-menu>\n                      <mat-menu #nestedmenu=\"matMenu\">\n                        <button mat-menu-item>\n                          <mat-icon>mail_outline</mat-icon>\n                          <span>Item 1</span>\n                        </button>\n                        <button mat-menu-item>\n                          <mat-icon>call</mat-icon>\n                          <span>Item 2</span>\n                        </button>\n                        <button mat-menu-item>\n                          <mat-icon>chat</mat-icon>\n                          <span>Item 3</span>\n                        </button>\n                      </mat-menu>\n                      <!-- context menu end -->\n                      <div\n                        *ngIf=\"!exampleDatabase.isTblLoading\"\n                        class=\"no-results\"\n                        [style.display]=\"\n                          dataSource.renderedData.length == 0 ? '' : 'none'\n                        \"\n                      >\n                        No results\n                      </div>\n                      <mat-paginator\n                        #paginator\n                        [length]=\"dataSource.filteredData.length\"\n                        [pageIndex]=\"0\"\n                        [pageSize]=\"10\"\n                        [pageSizeOptions]=\"[5, 10, 25, 100]\"\n                      >\n                      </mat-paginator>\n                    </div>\n\n                    <!-- <app-ngx-datatable></app-ngx-datatable> -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!---->\n  </div>\n</section>\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { LeadsService } from '../../leads.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public studentsService: LeadsService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.studentsService.deleteStudents(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h3 mat-dialog-title>Are you sure?</h3>\r\n    <div mat-dialog-content>\r\n        <ul class=\"clearfix\">\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Name: </span>{{data.name}}</p>\r\n            </li>\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Department: </span>{{ data.department }}</p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\r\n                </p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div mat-dialog-actions class=\"mb-1\">\r\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n            Delete\r\n        </button>\r\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { LeadsService } from '../../leads.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Leads } from '../../leads.model';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass']\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  stdForm: FormGroup;\r\n  students: Leads;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public studentsService: LeadsService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.dialogTitle = data.students.name;\r\n      this.students = data.students;\r\n    } else {\r\n      this.dialogTitle = 'New Students';\r\n      this.students = new Leads({});\r\n    }\r\n    this.stdForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      name: [this.students.name],\r\n      title: [this.students.title],\r\n\r\n      company: [this.students.company],\r\n\r\n      phone: [this.students.phone],\r\n      leadstatus: [this.students.leadstatus],\r\n      owner: [this.students.owner],\r\n      email: [\r\n        this.students.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n\r\n      mobile: [this.students.mobile],\r\n      \r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.studentsService.addStudents(this.stdForm.getRawValue());\r\n  }\r\n}\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 font-17\">\r\n            {{dialogTitle}} </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"stdForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>name</mat-label>\r\n            <input matInput formControlName=\"name\" required>\r\n            <mat-icon matSuffix>school</mat-icon>\r\n            <mat-error *ngIf=\"stdForm.get('name').hasError('required')\">\r\n              name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>email</mat-label>\r\n            <input matInput formControlName=\"email\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"stdForm.get('email').hasError('required')\">\r\n              email is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Select company</mat-label>\r\n            <mat-select formControlName=\"company\" required>\r\n              <mat-option [value]=\"'mechanical'\">\r\n                Mechanical\r\n              </mat-option>\r\n              <mat-option [value]=\"'science'\">\r\n                Science\r\n              </mat-option>\r\n              <mat-option [value]=\"'mathematics'\">\r\n                Mathematics\r\n              </mat-option>\r\n              <mat-option [value]=\"'computer'\">\r\n                Computer\r\n              </mat-option>\r\n              <mat-option [value]=\"'civil'\">\r\n                Civil\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"stdForm.get('company').hasError('required')\">\r\n              Select Any company\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>phone</mat-label>\r\n            <mat-select formControlName=\"gender\" required>\r\n              <mat-option [value]=\"'male'\">\r\n                Male\r\n              </mat-option>\r\n              <mat-option [value]=\"'female'\">\r\n                Female\r\n              </mat-option>\r\n              <mat-option [value]=\"'other'\">\r\n                Other\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"stdForm.get('phone').hasError('required')\">\r\n              phone is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>mobile</mat-label>\r\n            <input matInput formControlName=\"mobile\" type=\"number\">\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n            <mat-error *ngIf=\"stdForm.get('mobile').hasError('required')\">\r\n              Mobile is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" required>\r\n            <mat-icon matSuffix>email</mat-icon>\r\n            <mat-error *ngIf=\"stdForm.get('email').hasError('required') || stdForm.get('email').touched\">\r\n              Please enter a valid email address\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Joining date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"leadstatus\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"stdForm.get('leadstatus').hasError('required')\">\r\n              Please select leadstatus\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>owner</mat-label>\r\n            <input matInput formControlName=\"owner\" required>\r\n            <mat-icon matSuffix>email</mat-icon>\r\n            <mat-error *ngIf=\"stdForm.get('owner').hasError('required') || stdForm.get('email').touched\">\r\n              Please enter a valid owner \r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!stdForm.valid\" [mat-dialog-close]=\"1\"\r\n              (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","\r\nexport class Leads {\r\n  name: string;\r\n  title: string;\r\n  company: string;\r\n  phone: string; \r\n  mobile: string;\r\n  email: string;\r\n  leadstatus: string; \r\n  owner: string;\r\n  constructor(leads) {\r\n    {\r\n      this.name = leads.name || '';\r\n      this.title = leads.title || '';\r\n      this.company = leads.company || '';\r\n      this.phone = leads.department || '';\r\n      this.mobile = leads.mobile || '';\r\n      this.email = leads.email || '';\r\n      this.leadstatus = leads.leadstatus || '';\r\n      this.owner = leads.gender || '';\r\n      \r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Leads } from './leads.model';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeadsService extends UnsubscribeOnDestroyAdapter{\n  private readonly API_URL = 'assets/data/leads.json';\n  isTblLoading = true;\n  dataChange: BehaviorSubject<Leads[]> = new BehaviorSubject<Leads[]>([]);\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  constructor(private httpClient: HttpClient) {\n    super();\n  }\n  get data(): Leads[] {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  getAllStudentss(): void {\n    this.subs.sink = this.httpClient.get<Leads[]>(this.API_URL).subscribe(\n      (data) => {\n        this.isTblLoading = false;\n        this.dataChange.next(data);\n      },\n      (error: HttpErrorResponse) => {\n        this.isTblLoading = false;\n        console.log(error.name + ' ' + error.message);\n      }\n    );\n  }addStudents(leads: Leads): void {\n    this.dialogData = leads;\n\n    /*  this.httpClient.post(this.API_URL, students).subscribe(data => {\n      this.dialogData = students;\n      },\n      (err: HttpErrorResponse) => {\n     // error code here\n    });*/\n  }\n  updateStudents(students: Leads): void {\n    this.dialogData = students;\n\n    /* this.httpClient.put(this.API_URL + students.id, students).subscribe(data => {\n      this.dialogData = students;\n    },\n    (err: HttpErrorResponse) => {\n      // error code here\n    }\n  );*/\n  }\n  deleteStudents(id: number): void {\n    console.log(id);\n\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(id);\n      },\n      (err: HttpErrorResponse) => {\n         // error code here\n      }\n    );*/\n  }\n}\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dialogs',\r\n  templateUrl: './dialogs.component.html',\r\n  styleUrls: ['./dialogs.component.sass']\r\n})\r\nexport class DialogsComponent  implements OnInit{\r\n\r\n  stdForm:FormGroup;\r\n\r\n  constructor(\r\n    public dialogRef:MatDialogRef<DialogsComponent>,\r\n    @Inject(MAT_DIALOG_DATA)public data\r\n    ) { }\r\nngOnInit(): void {\r\n   \r\n}\r\n\r\n  onNoClick(){\r\n    this.dialogRef.close();\r\n  }\r\n  submit(){\r\n    \r\n  }\r\n\r\n  confirmAdd(){\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        \r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 font-17\">Create new lead</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button\r\n      mat-icon-button\r\n      (click)=\"dialogRef.close()\"\r\n      aria-label=\"Close dialog\"\r\n    >\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"stdForm\" (ngSubmit)=\"(submit)\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Title</mat-label>\r\n            <input matInput  required />\r\n            \r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput  required />\r\n            \r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n       <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Company</mat-label>\r\n            <input matInput  required />\r\n           \r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Phone</mat-label>\r\n            <input matInput  required />\r\n           \r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Mobile</mat-label>\r\n            <input matInput  required />\r\n           \r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput  required />\r\n          \r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Lead status</mat-label>\r\n            <input matInput  required />\r\n            \r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Owner</mat-label>\r\n            <input matInput  required />\r\n          \r\n          </mat-form-field>\r\n        </div>\r\n      </div> \r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" \r\n              (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div> \r\n       \r\n    </form>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {LeadComponent} from './lead.component'\r\nimport { NgxDatatableComponent } from 'src/app/tables/ngx-datatable/ngx-datatable.component';\r\nimport { OpportunityComponent } from './opportunity/opportunity.component';\r\nimport { AllLeadsComponent } from './all-leads/all-leads.component';\r\n\r\n\r\n\r\nconst route :Routes=[\r\n{\r\n  path: 'lead',\r\n  component: LeadComponent\r\n},\r\n{\r\n  path: 'all-leads', \r\n  component: AllLeadsComponent\r\n},\r\n{\r\n  path: 'opportunity',\r\n  component: OpportunityComponent\r\n},\r\n\r\n\r\n\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(route)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LeadRoutingModule { }\r\n","import { AfterViewInit, Component, OnInit ,ViewChild} from '@angular/core';\r\nimport { NgxDatatableComponent } from 'src/app/tables/ngx-datatable/ngx-datatable.component';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Calendar } from 'src/app/calendar/calendar.model';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\nimport { DialogsComponent } from './dialogs/dialogs.component';\r\n\r\n  \r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-lead',\r\n  templateUrl: './lead.component.html',\r\n  styleUrls: ['./lead.component.sass']\r\n})\r\nexport class LeadComponent \r\nimplements OnInit  {\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator:MatPaginator;\r\n\r\n\r\n  name;\r\n  calendar: Calendar | null;\r\n  numbers=[]\r\n  constructor(public dialog:MatDialog) {\r\n    for(let i=0;i<=1000;i++){\r\n      this.numbers.push(i);\r\n    \r\n    }\r\n    \r\n\r\n    \r\n\r\n   }\r\n  ngOnInit(): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  // ngAfterViewInit(): void {\r\n  //   this.dataSources.sort=this.sort;\r\n  //   this.dataSources.paginator=this.paginator\r\n  // }\r\n\r\n\r\n\r\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\r\n  dataSources = new MatTableDataSource(ELEMENT_DATA);\r\n\r\n//dialogs\r\n  addNewEvent(){\r\n    let dialogRef=this.dialog.open(DialogsComponent);\r\n    return dialogRef;\r\n    // dialogRef.afterClosed().subscribe(res=>{\r\n    //   console.log(`dialog result:${res}`)\r\n      \r\n    // })\r\n  }\r\n\r\n\r\n  applyFilteronTable(event:string){\r\n\r\n    this.dataSources.filter=event.trim().toLowerCase();\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"content-block\">\r\n      <br><br>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 col-sm-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <div class=\"row \" >\r\n              \r\n                <div class=\"col-md-12 col-sm-12  \">\r\n                  <div class=\"panel-body\">\r\n                    <div class=\"m-b-25 \">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-10\"> My Leads</div>\r\n                        <div class=\"col-sm-2\"><button mat-raised-button color=\"primary\" (click)=\"addNewEvent()\">Add Leads</button></div>\r\n\r\n                      </div>\r\n                      <app-ngx-datatable></app-ngx-datatable>\r\n                    \r\n\r\n                   \r\n\r\n                     \r\n                      \r\n                      \r\n\r\n                  </div>\r\n                   \r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n     \r\n       \r\n      \r\n\r\n      \r\n    </div>\r\n  </section>\r\n  ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {LeadRoutingModule} from './lead-routing.module'\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { LeadComponent } from './lead.component';\r\n\r\n\r\nimport { TablesModule } from 'src/app/tables/tables.module';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { DialogsComponent } from './dialogs/dialogs.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { OpportunityComponent } from './opportunity/opportunity.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AllLeadsComponent } from './all-leads/all-leads.component';\r\nimport { LeadsService} from './all-leads/leads.service';\r\nimport { FormDialogComponent } from './all-leads/dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './all-leads/dialogs/delete/delete.component';\r\nimport { MatOptionModule } from '@angular/material/core';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LeadComponent, \r\n    DialogsComponent,\r\n     OpportunityComponent,\r\n     AllLeadsComponent,\r\n     FormDialogComponent,\r\n     DeleteDialogComponent\r\n    ],\r\n  imports: [\r\n    CommonModule,\r\n    LeadRoutingModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TablesModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatOptionModule,\r\n    MatMenuModule,\r\n    MatSortModule,\r\n    MatIconModule,\r\n    MatPaginatorModule,\r\n    ScrollingModule\r\n  ],\r\n  providers: [LeadsService],\r\n\r\n\r\n})\r\nexport class LeadModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-opportunity',\n  templateUrl: './opportunity.component.html',\n  styleUrls: ['./opportunity.component.sass']\n})\nexport class OpportunityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<section class=\"content\">\n    <div class=\"content-block\">\n<p>opportunity works!</p>\n</div>\n</section>\n"],"names":[],"sourceRoot":"webpack:///"}