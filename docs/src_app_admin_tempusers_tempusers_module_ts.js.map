{"version":3,"file":"src_app_admin_tempusers_tempusers_module_ts.js","mappings":"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","sources":["./src/app/admin/tempusers/all-tempuser/all-tempuser.component.ts","./src/app/admin/tempusers/all-tempuser/all-tempuser.component.html","./src/app/admin/tempusers/all-tempuser/tempusers.service.ts","./src/app/admin/tempusers/tempusers-routing.module.ts","./src/app/admin/tempusers/tempusers.module.ts"],"sourcesContent":["import { DataSource, SelectionModel } from '@angular/cdk/collections';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { BehaviorSubject, fromEvent, map, merge, Observable } from 'rxjs';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\nimport { tmpusers } from './tempuser.model';\r\nimport { TempusersService } from './tempusers.service';\r\n\r\n@Component({\r\n  selector: 'app-all-tempuser',\r\n  templateUrl: './all-tempuser.component.html',\r\n  styleUrls: ['./all-tempuser.component.sass']\r\n})\r\nexport class AllTempuserComponent\r\nextends UnsubscribeOnDestroyAdapter\r\n implements OnInit\r\n  {\r\n\r\n    displayedColumns=[\r\n      'select',\r\n      'img',\r\n      'rollNo',\r\n      'name',\r\n      'department',\r\n      'gender',\r\n      'mobile',\r\n      'email',\r\n      'date',\r\n      'actions'\r\n    ];\r\n    ExampleDatabase:TempusersService|null;\r\n    dataSource:ExampleDataSource | null;\r\n    selection=new SelectionModel<tmpusers>(true,[]);\r\n    id:number;\r\n    tempsusr:tmpusers |null;\r\n  constructor(\r\n    public httpclient:HttpClient,\r\n    public dialog:MatDialog,\r\n    public tmpusService:TempusersService,\r\n    private snackBar:MatSnackBar\r\n  ) \r\n  { \r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator,{static:true}) paginator:MatPaginator;\r\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\r\n  @ViewChild('filter',{static:true}) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu:MatMenuTrigger;\r\n  contextmenuPostion={x:'0px',y:'0px'};\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n public loadData(){\r\n   this.ExampleDatabase=new TempusersService(this.httpclient);\r\n   this.dataSource=new ExampleDataSource(\r\n     this.ExampleDatabase,this.paginator,this.sort\r\n   );\r\n   this.subs.sink=fromEvent(this.filter.nativeElement,'keyup').subscribe(\r\n     ()=>{\r\n       if ( !this.dataSource){\r\n         return;\r\n       }\r\n       this.dataSource.filter=this.filter.nativeElement.value;\r\n     }\r\n   );\r\n }\r\n\r\n}\r\n\r\nexport class ExampleDataSource extends DataSource<tmpusers> \r\n{\r\n  filterchange=new BehaviorSubject('');\r\n  get filter():string {\r\n    return this.filterchange.value;\r\n  }\r\n  set filter(filter:string){\r\n    this.filterchange.next(filter);\r\n  }\r\n  filteredData:tmpusers[]=[];\r\n  renderedData:tmpusers[]=[];\r\n\r\n  constructor(\r\n    public exampleDatabase:TempusersService,\r\n    public paginator:MatPaginator,\r\n    public _sort:MatSort\r\n  ){\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterchange.subscribe(()=>\r\n    (this.paginator.pageIndex=0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<tmpusers[]>  {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n      const displayDataChanges=[\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterchange,\r\n      this.paginator.page,\r\n      ];\r\n      this.exampleDatabase.getAllTempUser();\r\n      return merge(...displayDataChanges).pipe(\r\n        map(()=>{\r\n          this.filteredData=this.exampleDatabase.data\r\n          .slice()\r\n          .filter((tempusr:tmpusers)=>{\r\n            const searchStr=(\r\n              tempusr.id+\r\n              tempusr.name +\r\n              tempusr.email+\r\n              tempusr.mobile\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n           // Sort filtered data\r\n          const sortedData=this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n          const startIndex= this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.renderedData=sortedData.splice(\r\n            startIndex,\r\n            this.paginator.pageSize\r\n          );\r\n          return this.renderedData;\r\n          \r\n        })\r\n      );\r\n      \r\n  }\r\n  disconnect(){}\r\n  /** Returns a sorted copy of the database data. */\r\n\r\n    sortData(data:tmpusers[]):tmpusers[]\r\n    {\r\n\r\n      if(!this._sort.active || this._sort.direction ==='')\r\n      {\r\n        return data;\r\n      }\r\n      return data.sort((a,b)=>{\r\n        let propertyA: number | string ='';\r\n        let propertyB: number | string ='';\r\n        switch (this._sort.active){\r\n          case 'id':\r\n            [propertyA,propertyB] =[a.id,b.id];\r\n            break;\r\n          case 'name':\r\n            [propertyA,propertyB] =[a.name,b.name];\r\n          case 'email':\r\n            [propertyA,propertyB] =[a.email,b.email];\r\n          case 'date':\r\n            [propertyA,propertyB] =[a.date,b.date];\r\n          case 'time':\r\n            [propertyA,propertyB] =[a.department,b.department];\r\n          case 'mobile':\r\n            [propertyA,propertyB] =[a.mobile,b.mobile];\r\n            break;  \r\n        }\r\n        const valueA=isNaN(+propertyA) ? propertyA : +propertyA;\r\n        const valueB=isNaN(+propertyB) ? propertyB : +propertyB;\r\n        return (\r\n          (valueA <valueB ? -1: 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n        );\r\n\r\n\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n","<section class=\"content\">\r\n    <div class=\"content-block\">\r\n        <p>all-tempuser works!</p>\r\n\r\n        <div class=\"row bgcolortest\" >\r\n            <div class=\"mt-5\">\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"body\">\r\n                        <div class=\"table-responsive\">\r\n                            <div class=\"materialTableHeader\">\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-12\">\r\n                                        <ul class=\"header-buttons-left ml-0\">\r\n                                            <li class=\"dropdown\">\r\n                                                <h2>\r\n                                                  <strong>Students</strong>\r\n                                                </h2>\r\n                                              </li>\r\n                                              <li class=\"dropdown m-l-20\">\r\n                                                <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                                                <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                                                  aria-label=\"Search box\">\r\n                                              </li>\r\n                                        </ul>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <!--Table start-->\r\n                            <!-- <mat-table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n\r\n                                <ng-container matColumnDef=\"id\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                        ID\r\n                                    </mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"img\">\r\n                                    <mat-header-cell *matHeaderCellDef  mat-header-cell [ngClass]=\"'tbl-col-width-per-6'\">\r\n                                        Image\r\n                                    </mat-header-cell>\r\n                                    <mat-cell met-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-6\">\r\n                                        <img [src]=\"row.img\" />\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <mat-row *matRowDef=\"let row;columns:displayedColumns;\" \r\n                            </mat-table> -->\r\n\r\n\r\n\r\n                            <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                                <!-- Checkbox Column -->\r\n                                <ng-container matColumnDef=\"select\">\r\n                                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                                    </mat-checkbox>\r\n                                  </mat-header-cell>\r\n                                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                                    <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                      (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\r\n                                      [ngClass]=\"'tbl-checkbox'\">\r\n                                    </mat-checkbox>\r\n                                  </mat-cell>\r\n                                </ng-container>\r\n                                <!-- ID Column -->\r\n                                <ng-container matColumnDef=\"id\">\r\n                                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id\r\n                                  </mat-header-cell>\r\n                                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"img\">\r\n                                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\"> Image\r\n                                  </mat-header-cell>\r\n                                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-6\">\r\n                                  </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"rollNo\">\r\n                                  <mat-header-cell *matHeaderCellDef mat-sort-header>Roll No\r\n                                  </mat-header-cell>\r\n                                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.rollNo}}\r\n                                  </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"name\">\r\n                                  <mat-header-cell *matHeaderCellDef mat-sort-header>Name\r\n                                  </mat-header-cell>\r\n                                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.name}}\r\n                                  </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"department\">\r\n                                  <mat-header-cell *matHeaderCellDef mat-sort-header>Department\r\n                                  </mat-header-cell>\r\n                                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                    {{row.department}}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"gender\">\r\n                                  <mat-header-cell *matHeaderCellDef mat-sort-header>Gender\r\n                                  </mat-header-cell>\r\n                                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.gender}}\r\n                                  </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"mobile\">\r\n                                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile\r\n                                  </mat-header-cell>\r\n                                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.mobile}}\r\n                                  </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"email\">\r\n                                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email\r\n                                  </mat-header-cell>\r\n                                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.email}}\r\n                                  </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"date\">\r\n                                  <mat-header-cell *matHeaderCellDef mat-sort-header>Admission\r\n                                    Date\r\n                                  </mat-header-cell>\r\n                                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                    {{row.date | date: 'MM/dd/yyyy'}}</mat-cell>\r\n                                </ng-container>\r\n                                <!-- actions -->\r\n                                <ng-container matColumnDef=\"actions\">\r\n                                  <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions\r\n                                  </mat-header-cell>\r\n                                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\"\r\n                                      (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\">\r\n                                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit\r\n                                      </mat-icon>\r\n                                    </button>\r\n                                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\"\r\n                                      (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\">\r\n                                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete\r\n                                      </mat-icon>\r\n                                    </button>\r\n                                  </mat-cell>\r\n                                </ng-container>\r\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\r\n                                </mat-header-row>\r\n                                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                                  [style.cursor]=\"'pointer'\" matRipple>\r\n                                </mat-row>\r\n                              </mat-table>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        </div>\r\n        </section>\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\nimport { tmpusers } from './tempuser.model';\r\n\r\n@Injectable()\r\nexport class \r\nTempusersService \r\nextends UnsubscribeOnDestroyAdapter{   //A class that automatically unsubscribes all observables when the object gets destroyed\r\n\r\n  private readonly API_URL='assets/data/tempuser.json'\r\n  isTblLoading=true;\r\n  dataChange:BehaviorSubject<tmpusers[]> = new BehaviorSubject<tmpusers[]>([]);\r\n  // temporary holds data from the dialogs\r\n  dialogData:any;\r\n\r\n  constructor(private httpclient:HttpClient) {\r\n    super();  \r\n   }\r\n\r\n   get data():tmpusers[]{\r\n     return this.dataChange.value;\r\n   }\r\n  // Crud \r\n  getAllTempUser():void {\r\n    this.subs.sink=this.httpclient.get<tmpusers[]>(this.API_URL).subscribe(     // * Subscription sink that holds Observable subscriptions until you call unsubscribe on it in ngOnDestroy.\r\n      (data)=>\r\n      {\r\n        this.isTblLoading=false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error:HttpErrorResponse)=>{\r\n        this.isTblLoading=false;\r\n        console.log(error.name +' '+ error.message);\r\n      }\r\n\r\n    );\r\n  }\r\n//---get all student finish\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport {AllTempuserComponent} from './all-tempuser/all-tempuser.component'\r\nimport { TempusersComponent } from './tempusers.component';\r\n\r\n\r\nconst routes:Routes=[\r\n  {\r\n    path: '',\r\n    component: TempusersComponent\r\n  },\r\n  {\r\n    path: 'all-temp',\r\n    component: AllTempuserComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n  \r\n})\r\nexport class TempusersRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AllTempuserComponent } from './all-tempuser/all-tempuser.component';\r\nimport { TempusersRoutingModule } from './tempusers-routing.module';\r\nimport { TempusersService } from './all-tempuser/tempusers.service';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AllTempuserComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TempusersRoutingModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatSortModule\r\n\r\n  ],\r\n  providers:[TempusersService]\r\n})\r\nexport class TempusersModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}